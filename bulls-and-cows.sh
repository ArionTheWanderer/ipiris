#!/bin/bash

# При получении сигнала SIGINT (Ctrl+C) вывести подсказку для завершения сценария.
trap 'echo ""; echo "Чтобы завершить работу сценария, введите символ «q» или «Q»";' SIGINT

cat <<'EOF'
********************************************************************************
* Я загадал 4-значное число с неповторяющимися цифрами. На каждом ходу делайте *
* попытку отгадать загаданное число. Попытка — это 4-значное число с           *
* неповторяющимися цифрами.                                                    *
********************************************************************************
EOF
echo ""

# Функция для генерации случайного 4-значного числа с неповторяющимися цифрами.
# Гарантируется, что число не начинается с 0.
generate_secret() {
  while true; do
    # Сгенерировать 4 случайных цифры и записать их в одну строку без разделителей
    candidate=$(shuf -i 0-9 -n 4 | paste -sd '')
    # Если число удовлетворяет регулярному выражению(не начинается с 0 и содержит 4 цифры), то записываем в стандартный вывод
    if [[ $candidate =~ ^[1-9][0-9]{3}$ ]]; then
      echo "$candidate"
      return
    fi
  done
}

# Генерация загаданного числа:
secret=$(generate_secret)

# Счётчик попыток и история ходов.
attempt=0
history=""

# Цикл игры:
while true; do
  # Запрос ввода с промптом номера попытки
  read -p "Попытка $((attempt+1)): " input

  # Проверка: если введён символ 'q' или 'Q', завершаем работу со статусом 1.
  if [[ "$input" =~ ^[qQ]$ ]]; then
    echo "Выход из игры. Загаданное число было: $secret"
    exit 1
  fi

  # Проверка: ввод должен состоять ровно из 4-х цифр.
  if ! [[ "$input" =~ ^[0-9]{4}$ ]]; then
    echo "Ошибка: введите 4-значное число с неповторяющимися цифрами или 'q' для выхода."
    continue
  fi

  # Проверка на неповторяющиеся цифры.
  # Если найдутся повторяющиеся символы, будет показана ошибка.
  if [[ $(echo "$input" | fold -w1 | sort | uniq -d | wc -l) -gt 0 ]]; then
    echo "Ошибка: цифры не должны повторяться. Попробуйте снова."
    continue
  fi

  # Ввод корректный. Увеличение счётчика попыток.
  attempt=$((attempt+1))

  # Вычисление количество «быков»:
  # Быки - цифры, совпадающие с загаданным числом и стоящие на своей позиции.
  bulls=0
  for (( i=0; i<4; i++ )); do
    if [[ "${input:$i:1}" == "${secret:$i:1}" ]]; then
      bulls=$((bulls+1))
    fi
  done

  # Вычисление количества общих цифр между введенным и загаданным числом.
  # Так как все цифры уникальны, то количество коров = общее число совпадающих цифр - количество быков.
  common=0
  for (( i=0; i<4; i++ )); do
    digit="${input:$i:1}"
    if [[ "$secret" == *"$digit"* ]]; then
      common=$((common+1))
    fi
  done
  cows=$((common - bulls))

  # Вывод результата текущей попытки.
  echo "Коров - $cows, Быков - $bulls"

  # Добавление записи в историю ходов.
  history+="$attempt. $input (Коров - $cows, Быков - $bulls)\n"

  # Вывод всей истории ходов:
  echo -e "\nИстория ходов:\n$history"
  echo ""

  # Если пользователь угадал число - вывод сообщения и завершение сценария со статусом 0.
  if [[ "$input" == "$secret" ]]; then
    echo "Поздравляем, вы угадали число!"
    exit 0
  fi
done
